{"ast":null,"code":"var config = require(\"../config\");\n\nvar toonavatar = module.exports = {\n  /**\r\n   * generate_avatar will generate a cartoon avatar.\r\n   * \r\n   * @param {Object}\r\n   *            options\r\n   * @return {String}\r\n   */\n  generate_avatar: function (options) {\n    /*\r\n     * options = { \"gender\": \"male\" , \"id\":xxx}\r\n     * \r\n     */\n    var baseURL = \"https://raw.githubusercontent.com/Ashwinvalento/cartoon-avatar/master/lib/images/\";\n    var gender, id;\n\n    if (typeof options != 'undefined' && options) {\n      //If options are given but one of them is skipped\n      if (typeof options.gender === 'undefined') {\n        gender = getRandomInt(0, 1) % 2 ? \"male\" : \"female\";\n      } else {\n        gender = getGender(options.gender);\n      }\n\n      if (typeof options.id === 'undefined') {\n        id = getRandomInt(1, gender === \"male\" ? config.MALE_IMAGE_COUNT : config.FEMALE_IMAGE_COUNT);\n      } else {\n        id = options.id % Math.round(gender === \"male\" ? config.MALE_IMAGE_COUNT + 1 : config.FEMALE_IMAGE_COUNT + 1);\n        id = id === 0 ? 1 : id;\n      }\n    } else {\n      //If no options are given\n      gender = getRandomInt(0, 1) % 2 ? \"male\" : \"female\";\n      id = getRandomInt(1, gender === \"male\" ? config.MALE_IMAGE_COUNT : config.FEMALE_IMAGE_COUNT);\n    }\n\n    return baseURL + gender + \"/\" + id + \".png\";\n  }\n};\n\nfunction getGender(gender) {\n  gender = gender.trim().toLowerCase();\n\n  if (gender === \"male\" || gender === \"m\") {\n    return \"male\";\n  } else if (gender === \"female\" || gender === \"f\") {\n    return \"female\";\n  }\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["/Users/imac/Documents/GitHub/GishaLoans/frontend/node_modules/cartoon-avatar/lib/cartoon-avatar.js"],"names":["config","require","toonavatar","module","exports","generate_avatar","options","baseURL","gender","id","getRandomInt","getGender","MALE_IMAGE_COUNT","FEMALE_IMAGE_COUNT","Math","round","trim","toLowerCase","min","max","floor","random"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAEA,IAAIC,UAAU,GAAGC,MAAM,CAACC,OAAP,GAAiB;AACjC;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,eAAe,EAAG,UAASC,OAAT,EAAkB;AACnC;AACF;AACA;AACA;AACE,QAAIC,OAAO,GAAG,mFAAd;AACA,QAAIC,MAAJ,EAAYC,EAAZ;;AAEA,QAAI,OAAOH,OAAP,IAAkB,WAAlB,IAAiCA,OAArC,EAA8C;AAC7C;AACA,UAAI,OAAOA,OAAO,CAACE,MAAf,KAA0B,WAA9B,EAA4C;AAC3CA,QAAAA,MAAM,GAAGE,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,GAAqB,CAArB,GAAyB,MAAzB,GAAkC,QAA3C;AACA,OAFD,MAEO;AACNF,QAAAA,MAAM,GAAGG,SAAS,CAACL,OAAO,CAACE,MAAT,CAAlB;AACA;;AAED,UAAK,OAAOF,OAAO,CAACG,EAAf,KAAsB,WAA3B,EAAwC;AACvCA,QAAAA,EAAE,GAAGC,YAAY,CAAC,CAAD,EACfF,MAAM,KAAK,MAAX,GAAoBR,MAAM,CAACY,gBAA3B,GACIZ,MAAM,CAACa,kBAFI,CAAjB;AAGA,OAJD,MAIO;AACNJ,QAAAA,EAAE,GAAGH,OAAO,CAACG,EAAR,GAAaK,IAAI,CAACC,KAAL,CAAWP,MAAM,KAAK,MAAX,GAAoBR,MAAM,CAACY,gBAAP,GAA0B,CAA9C,GACzBZ,MAAM,CAACa,kBAAP,GAA4B,CADd,CAAlB;AAEAJ,QAAAA,EAAE,GAAIA,EAAE,KAAK,CAAP,GAAW,CAAX,GAAeA,EAArB;AACA;AACD,KAjBD,MAiBK;AACJ;AACAD,MAAAA,MAAM,GAAGE,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,GAAqB,CAArB,GAAyB,MAAzB,GAAkC,QAA3C;AACAD,MAAAA,EAAE,GAAGC,YAAY,CAAC,CAAD,EACfF,MAAM,KAAK,MAAX,GAAoBR,MAAM,CAACY,gBAA3B,GACIZ,MAAM,CAACa,kBAFI,CAAjB;AAGA;;AACD,WAAON,OAAO,GAAGC,MAAV,GAAmB,GAAnB,GAAyBC,EAAzB,GAA8B,MAArC;AACA;AAzCgC,CAAlC;;AA6CA,SAASE,SAAT,CAAmBH,MAAnB,EAA2B;AAE1BA,EAAAA,MAAM,GAAGA,MAAM,CAACQ,IAAP,GAAcC,WAAd,EAAT;;AACA,MAAIT,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,GAApC,EAAyC;AACxC,WAAO,MAAP;AACA,GAFD,MAEO,IAAIA,MAAM,KAAK,QAAX,IAAuBA,MAAM,KAAK,GAAtC,EAA2C;AACjD,WAAO,QAAP;AACA;AACD;;AAED,SAASE,YAAT,CAAsBQ,GAAtB,EAA2BC,GAA3B,EAAgC;AAC/B,SAAOL,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACO,MAAL,MAAiBF,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACA","sourcesContent":["var config = require(\"../config\");\r\n\r\nvar toonavatar = module.exports = {\r\n\t/**\r\n\t * generate_avatar will generate a cartoon avatar.\r\n\t * \r\n\t * @param {Object}\r\n\t *            options\r\n\t * @return {String}\r\n\t */\r\n\tgenerate_avatar : function(options) {\r\n\t\t/*\r\n\t\t * options = { \"gender\": \"male\" , \"id\":xxx}\r\n\t\t * \r\n\t\t */\r\n\t\tvar baseURL = \"https://raw.githubusercontent.com/Ashwinvalento/cartoon-avatar/master/lib/images/\";\r\n\t\tvar gender, id;\r\n\r\n\t\tif (typeof options != 'undefined' && options) {\r\n\t\t\t//If options are given but one of them is skipped\r\n\t\t\tif (typeof options.gender === 'undefined' ) {\r\n\t\t\t\tgender = getRandomInt(0, 1) % 2 ? \"male\" : \"female\";\r\n\t\t\t} else {\r\n\t\t\t\tgender = getGender(options.gender);\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof options.id === 'undefined') {\r\n\t\t\t\tid = getRandomInt(1,\r\n\t\t\t\t\t\tgender === \"male\" ? config.MALE_IMAGE_COUNT\r\n\t\t\t\t\t\t\t\t: config.FEMALE_IMAGE_COUNT);\r\n\t\t\t} else {\r\n\t\t\t\tid = options.id % Math.round(gender === \"male\" ? config.MALE_IMAGE_COUNT + 1\r\n\t\t\t\t\t\t: config.FEMALE_IMAGE_COUNT + 1 );\r\n\t\t\t\tid = (id === 0 ? 1 : id );\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//If no options are given\r\n\t\t\tgender = getRandomInt(0, 1) % 2 ? \"male\" : \"female\";\r\n\t\t\tid = getRandomInt(1,\r\n\t\t\t\t\tgender === \"male\" ? config.MALE_IMAGE_COUNT\r\n\t\t\t\t\t\t\t: config.FEMALE_IMAGE_COUNT);\r\n\t\t}\r\n\t\treturn baseURL + gender + \"/\" + id + \".png\";\r\n\t}\r\n\r\n};\r\n\r\nfunction getGender(gender) {\r\n\r\n\tgender = gender.trim().toLowerCase();\r\n\tif (gender === \"male\" || gender === \"m\") {\r\n\t\treturn \"male\";\r\n\t} else if (gender === \"female\" || gender === \"f\") {\r\n\t\treturn \"female\";\r\n\t}\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}"]},"metadata":{},"sourceType":"script"}